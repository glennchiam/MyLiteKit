{  Project: EE-8 Assignment - CommControl  Platform: Parallax Project USB Board  Revision: 1.1  Author: GLenn CHiam  Date 26th Nov 2021  Log:}CON  commRxPin   = 24  commTxPin   = 25  commBaud    = 9600  commStart   = $7A  commForward = $01  commReverse = $02  commLeft    = $03  commRight   = $04  commStopAll = $AAVAR   ' Global variable  long cogIDNum, cogStack[128]  long _Ms_001OBJ  ' Objects  Comm  : "FullDuplexSerial.spin"   'UART communication for Control  'Term    : "FullDuplexSerial.spin"  'Create a hardware definition filePUB Start(mainMSVal, signal)  _Ms_001 := mainMSVal  StopCore  cogIDNum := cognew(commCore(signal), @cogStack)  returnPUB StopCore  if cogIDNum > 0    '<-- if there is a value    cogstop(cogIDNum~)  returnPUB commCore(signal)  | rxValueAdd  'Declaration & Initialization  Comm.Start(commRxPin, commTxPin, 0, commBaud)  'Term.Start(31, 30 ,0, 115200)  pause(1000)  'Run & get readings  repeat    rxValueAdd := Comm.Rx    'comm.str(string(13, "heyy"))    if(rxValueAdd == commStart)      'comm.str(string(13, "heyxx"))      repeat        rxValueAdd := Comm.Rx        case rxValueAdd          commForward:            'comm.str(string(13, "forward"))            long[signal] := 1         ' motors move Forward          commReverse:            long[signal] := 2         ' motors move Reverse             'comm.str(string(13, "reverse"))          commLeft:            long[signal] := 3         'motors turn left            'comm.str(string(13, "left"))          commRight:            long[signal] := 4         'motors turn right             'comm.str(string(13, "right"))          commStopAll:            long[signal] := 5         'stop all motors             'comm.str(string(13, "stop"))PRI Pause(ms) | t  t := cnt - 1088               ' sync with system counter  repeat (ms #> 0)              ' delay must be > 0    waitcnt(t+=_MS_001)  return